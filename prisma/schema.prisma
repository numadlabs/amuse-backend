// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator kysely {
  provider     = "prisma-kysely"
  output       = "../src/types/db"
  enumFileName = "enums.ts"
  fileName     = "types.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String    @id @default(dbgenerated("gen_random_uuid()"))
  email                 String?   @unique
  emailVerificationCode Int?
  isEmailVerified       Boolean   @default(false)
  emailVerifiedAt       DateTime?
  password              String
  nickname              String
  firstName             String?
  lastName              String?
  role                  ROLES     @default(USER)
  prefix                String
  telNumber             String
  telVerificationCode   Int?
  isTelVerified         Boolean   @default(false)
  profilePicture        String?
  dateOfBirth           DateTime?
  location              String?
  createdAt             DateTime  @default(now())
}

enum ROLES {
  ADMIN
  USER
}

model Restaurant {
  id                    String    @id @default(dbgenerated("gen_random_uuid()"))
  name String
  category String
  location String
  expiryInfo String
  artistInfo String
  nftImageUrl String
  about String
  instruction String
  benefits String
  membershipCardId String
  Card Card   @relation(fields: [membershipCardId], references: [id])
}

model Card {
  id                    String    @id @default(dbgenerated("gen_random_uuid()"))
  // visitCount Int
  // mintedAt DateTime
  createdAt DateTime
  tier String

Restaurant Restaurant @relation("membershipCard")
}

model UserCard {
  id                    String    @id @default(dbgenerated("gen_random_uuid()"))
  visitCount Int
  mintedAt DateTime
  createdAt DateTime
  tier String
  nftId String?

// Restaurant Restaurant @relation("membershipCard")
}
model Bonus {
  id                    String    @id @default(dbgenerated("gen_random_uuid()"))
  imageUrl String
  name String
  price Int
  currency String

}

model UserBonus{
  id                    String    @id @default(dbgenerated("gen_random_uuid()"))

}

model Notification {
  id                    String    @id @default(dbgenerated("gen_random_uuid()"))
}